{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/Assessment/cookie-clicker/frontend/src/components/ClickerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000';\nconst CookieIcon = ({\n  isPressed,\n  onClick\n}) => /*#__PURE__*/_jsxDEV(\"svg\", {\n  onClick: onClick,\n  style: {\n    cursor: 'pointer',\n    transform: isPressed ? 'scale(0.9)' : 'scale(1)',\n    transition: 'transform 0.1s',\n    filter: isPressed ? 'brightness(0.8)' : 'none'\n  },\n  width: \"200\",\n  height: \"200\",\n  viewBox: \"0 0 100 100\",\n  children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: \"50\",\n    cy: \"50\",\n    r: \"45\",\n    fill: \"#D2691E\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this), [{\n    cx: 30,\n    cy: 25\n  }, {\n    cx: 70,\n    cy: 35\n  }, {\n    cx: 40,\n    cy: 60\n  }, {\n    cx: 60,\n    cy: 65\n  }].map(({\n    cx,\n    cy\n  }, index) => /*#__PURE__*/_jsxDEV(\"circle\", {\n    cx: cx,\n    cy: cy,\n    r: \"5\",\n    fill: \"#8B4513\"\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = CookieIcon;\nconst ClickerGame = () => {\n  _s();\n  const [totalScore, setTotalScore] = useState(0);\n  const [clickNotification, setClickNotification] = useState(null);\n  const [prizes, setPrizes] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [isPressed, setIsPressed] = useState(false);\n  const [activeEffects, setActiveEffects] = useState([]);\n  const effectTimerRef = useRef(null);\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    setUserId(storedUserId || `user_${Date.now()}`);\n    localStorage.setItem('userId', storedUserId || `user_${Date.now()}`);\n  }, []);\n\n  // Effect tracking and cleanup\n  useEffect(() => {\n    if (activeEffects.length > 0) {\n      if (effectTimerRef.current) {\n        clearInterval(effectTimerRef.current);\n      }\n      effectTimerRef.current = setInterval(() => {\n        setActiveEffects(currentEffects => currentEffects.filter(effect => {\n          // Time-based effects\n          if (effect.remainingTime !== undefined) {\n            const newRemainingTime = Math.max(0, effect.remainingTime - 1);\n            return newRemainingTime > 0;\n          }\n          // Click-based effects\n          return effect.remainingClicks > 0;\n        }).map(effect => {\n          if (effect.remainingTime !== undefined) {\n            return {\n              ...effect,\n              remainingTime: effect.remainingTime - 1\n            };\n          }\n          return effect;\n        }));\n      }, 1000);\n      return () => {\n        if (effectTimerRef.current) {\n          clearInterval(effectTimerRef.current);\n        }\n      };\n    }\n  }, [activeEffects]);\n\n  // Calculate current click value based on active effects\n  const calculateClickValue = baseValue => {\n    return activeEffects.reduce((finalValue, effect) => {\n      switch (effect.type) {\n        case 'Double Points':\n          if (Date.now() - effect.startTime < effect.duration) {\n            return finalValue * 2;\n          }\n          return finalValue;\n        case 'Prize Multiplier':\n          if (effect.remainingClicks > 0) {\n            return finalValue * 1.5;\n          }\n          return finalValue;\n        case 'Lucky Charm':\n          if (effect.remainingClicks > 0) {\n            return finalValue + 10;\n          }\n          return finalValue;\n        default:\n          return finalValue;\n      }\n    }, baseValue);\n  };\n  const handleClick = async () => {\n    setIsPressed(true);\n    setTimeout(() => setIsPressed(false), 100);\n    try {\n      const response = await fetch(`${API_URL}/api/click`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          activeEffects: activeEffects\n        })\n      });\n      const {\n        totalScore,\n        scoreIncrease,\n        prize,\n        prizeEffect,\n        updatedActiveEffects\n      } = await response.json();\n      setTotalScore(totalScore);\n      const notifications = [];\n\n      // Calculate modified click value\n      const modifiedScoreIncrease = calculateClickValue(scoreIncrease);\n\n      // Base click notification\n      notifications.push({\n        value: modifiedScoreIncrease,\n        id: Date.now(),\n        x: -20,\n        y: Math.random() * 20 - 10\n      });\n\n      // Prize notification if exists\n      if (prize && prizeEffect) {\n        notifications.push({\n          value: prizeEffect.pointIncrease,\n          prize: prize,\n          id: Date.now() + 1,\n          x: 20,\n          y: Math.random() * 20 - 10\n        });\n\n        // Add new prize to list\n        setPrizes(prev => [{\n          name: prize,\n          timestamp: new Date().toLocaleString()\n        }, ...prev]);\n      }\n\n      // Update active effects\n      setActiveEffects(updatedActiveEffects || []);\n      setClickNotification(notifications);\n      setTimeout(() => setClickNotification(null), 1000);\n    } catch (error) {\n      console.error('Click failed', error);\n    }\n  };\n  const removePrize = indexToRemove => {\n    setPrizes(prev => prev.filter((_, index) => index !== indexToRemove));\n  };\n  const clearAllPrizes = () => {\n    setPrizes([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      width: '100%',\n      height: '100vh',\n      backgroundColor: '#f0f0f0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '50%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [totalScore, \" cookies\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), activeEffects.map((effect, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green',\n          marginBottom: '10px',\n          fontWeight: 'bold'\n        },\n        children: [effect.type, effect.remainingTime !== undefined ? ` ends in: ${effect.remainingTime} seconds` : ` remaining: ${effect.remainingClicks} clicks`]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(CookieIcon, {\n          isPressed: isPressed,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), clickNotification && clickNotification.filter(notification => notification.value > 0).map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: notification.prize ? '20%' : '50%',\n            left: notification.prize ? '50%' : '50%',\n            transform: `translate(${notification.x}px, ${notification.y}px)`,\n            color: notification.prize ? 'gold' : 'white',\n            opacity: 0,\n            animation: 'fadeOut 3s forwards',\n            fontSize: '24px',\n            textAlign: 'center',\n            fontWeight: notification.prize ? 'bold' : 'normal'\n          },\n          children: notification.prize ? `ðŸŽ‰+${notification.value}` : `+${notification.value}`\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '50%',\n        backgroundColor: '#e0e0e0',\n        padding: '20px',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Prizes Won\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearAllPrizes,\n          style: {\n            backgroundColor: 'red',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '5px'\n          },\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), prizes.map((prize, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          margin: '10px 0',\n          padding: '10px',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          borderRadius: '5px'\n        },\n        children: [prize.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removePrize(index),\n          style: {\n            backgroundColor: 'red',\n            color: 'white',\n            border: 'none',\n            borderRadius: '50%',\n            width: '25px',\n            height: '25px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        @keyframes fadeOut {\n          0% { opacity: 1; transform: translate(0, 0); }\n          100% { opacity: 0; transform: translate(var(--x), var(--y)); }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(ClickerGame, \"P9YbqnUuZ4DoksJTQgNcQWLq0SU=\");\n_c2 = ClickerGame;\nexport default ClickerGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"CookieIcon\");\n$RefreshReg$(_c2, \"ClickerGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_URL","CookieIcon","isPressed","onClick","style","cursor","transform","transition","filter","width","height","viewBox","children","cx","cy","r","fill","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","ClickerGame","_s","totalScore","setTotalScore","clickNotification","setClickNotification","prizes","setPrizes","userId","setUserId","setIsPressed","activeEffects","setActiveEffects","effectTimerRef","storedUserId","localStorage","getItem","Date","now","setItem","length","current","clearInterval","setInterval","currentEffects","effect","remainingTime","undefined","newRemainingTime","Math","max","remainingClicks","calculateClickValue","baseValue","reduce","finalValue","type","startTime","duration","handleClick","setTimeout","response","fetch","method","headers","body","JSON","stringify","scoreIncrease","prize","prizeEffect","updatedActiveEffects","json","notifications","modifiedScoreIncrease","push","value","id","x","y","random","pointIncrease","prev","name","timestamp","toLocaleString","error","console","removePrize","indexToRemove","_","clearAllPrizes","display","backgroundColor","flexDirection","alignItems","justifyContent","color","marginBottom","fontWeight","position","notification","top","left","opacity","animation","fontSize","textAlign","padding","overflowY","border","borderRadius","margin","_c2","$RefreshReg$"],"sources":["/home/manasa/Projects/Assessment/cookie-clicker/frontend/src/components/ClickerGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst API_URL = 'http://localhost:5000';\n\nconst CookieIcon = ({ isPressed, onClick }) => (\n  <svg \n    onClick={onClick}\n    style={{\n      cursor: 'pointer',\n      transform: isPressed ? 'scale(0.9)' : 'scale(1)',\n      transition: 'transform 0.1s',\n      filter: isPressed ? 'brightness(0.8)' : 'none'\n    }}\n    width=\"200\" \n    height=\"200\" \n    viewBox=\"0 0 100 100\"\n  >\n    <circle \n      cx=\"50\" \n      cy=\"50\" \n      r=\"45\" \n      fill=\"#D2691E\"\n    />\n    \n    {[\n      {cx: 30, cy: 25}, \n      {cx: 70, cy: 35}, \n      {cx: 40, cy: 60}, \n      {cx: 60, cy: 65}\n    ].map(({cx, cy}, index) => (\n      <circle \n        key={index} \n        cx={cx} \n        cy={cy} \n        r=\"5\" \n        fill=\"#8B4513\"\n      />\n    ))}\n  </svg>\n);\n\nconst ClickerGame = () => {\n  const [totalScore, setTotalScore] = useState(0);\n  const [clickNotification, setClickNotification] = useState(null);\n  const [prizes, setPrizes] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [isPressed, setIsPressed] = useState(false);\n  const [activeEffects, setActiveEffects] = useState([]);\n  const effectTimerRef = useRef(null);\n\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    setUserId(storedUserId || `user_${Date.now()}`);\n    localStorage.setItem('userId', storedUserId || `user_${Date.now()}`);\n  }, []);\n\n  // Effect tracking and cleanup\n  useEffect(() => {\n    if (activeEffects.length > 0) {\n      if (effectTimerRef.current) {\n        clearInterval(effectTimerRef.current);\n      }\n\n      effectTimerRef.current = setInterval(() => {\n        setActiveEffects(currentEffects => \n          currentEffects.filter(effect => {\n            // Time-based effects\n            if (effect.remainingTime !== undefined) {\n              const newRemainingTime = Math.max(0, effect.remainingTime - 1);\n              return newRemainingTime > 0;\n            }\n            // Click-based effects\n            return effect.remainingClicks > 0;\n          }).map(effect => {\n            if (effect.remainingTime !== undefined) {\n              return { ...effect, remainingTime: effect.remainingTime - 1 };\n            }\n            return effect;\n          })\n        );\n      }, 1000);\n\n      return () => {\n        if (effectTimerRef.current) {\n          clearInterval(effectTimerRef.current);\n        }\n      };\n    }\n  }, [activeEffects]);\n\n  // Calculate current click value based on active effects\n  const calculateClickValue = (baseValue) => {\n    return activeEffects.reduce((finalValue, effect) => {\n      switch(effect.type) {\n        case 'Double Points':\n          if (Date.now() - effect.startTime < effect.duration) {\n            return finalValue * 2;\n          }\n          return finalValue;\n        \n        case 'Prize Multiplier':\n          if (effect.remainingClicks > 0) {\n            return finalValue * 1.5;\n          }\n          return finalValue;\n        \n        case 'Lucky Charm':\n          if (effect.remainingClicks > 0) {\n            return finalValue + 10;\n          }\n          return finalValue;\n        \n        default:\n          return finalValue;\n      }\n    }, baseValue);\n  };\n\n  const handleClick = async () => {\n    setIsPressed(true);\n    setTimeout(() => setIsPressed(false), 100);\n\n    try {\n      const response = await fetch(`${API_URL}/api/click`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          userId,\n          activeEffects: activeEffects\n        })\n      });\n      \n      const { \n        totalScore, \n        scoreIncrease, \n        prize, \n        prizeEffect,\n        updatedActiveEffects \n      } = await response.json();\n      \n      setTotalScore(totalScore);\n      \n      const notifications = [];\n      \n      // Calculate modified click value\n      const modifiedScoreIncrease = calculateClickValue(scoreIncrease);\n      \n      // Base click notification\n      notifications.push({\n        value: modifiedScoreIncrease,\n        id: Date.now(),\n        x: -20,\n        y: Math.random() * 20 - 10\n      });\n      \n      // Prize notification if exists\n      if (prize && prizeEffect) {\n        notifications.push({\n          value: prizeEffect.pointIncrease,\n          prize: prize,\n          id: Date.now() + 1,\n          x: 20,\n          y: Math.random() * 20 - 10\n        });\n        \n        // Add new prize to list\n        setPrizes(prev => [{\n          name: prize,\n          timestamp: new Date().toLocaleString()\n        }, ...prev]);\n      }\n      \n      // Update active effects\n      setActiveEffects(updatedActiveEffects || []);\n      \n      setClickNotification(notifications);\n      \n      setTimeout(() => setClickNotification(null), 1000);\n    } catch (error) {\n      console.error('Click failed', error);\n    }\n  };\n\n  const removePrize = (indexToRemove) => {\n    setPrizes(prev => prev.filter((_, index) => index !== indexToRemove));\n  };\n\n  const clearAllPrizes = () => {\n    setPrizes([]);\n  };\n\n  return (\n    <div style={{ \n      display: 'flex', \n      width: '100%', \n      height: '100vh',\n      backgroundColor: '#f0f0f0'\n    }}>\n      <div style={{ \n        width: '50%', \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'center' \n      }}>\n        <h2>{totalScore} cookies</h2>\n        \n        {/* Active Effects Display */}\n        {activeEffects.map((effect, index) => (\n          <div \n            key={index} \n            style={{ \n              color: 'green', \n              marginBottom: '10px', \n              fontWeight: 'bold' \n            }}\n          >\n            {effect.type} \n            {effect.remainingTime !== undefined \n              ? ` ends in: ${effect.remainingTime} seconds`\n              : ` remaining: ${effect.remainingClicks} clicks`\n            }\n          </div>\n        ))}\n        \n        <div style={{ position: 'relative' }}>\n          <CookieIcon \n            isPressed={isPressed}\n            onClick={handleClick} \n          />\n\n          {clickNotification && clickNotification\n            .filter(notification => notification.value > 0)\n            .map(notification => (\n              <div key={notification.id} style={{\n                position: 'absolute',\n                top: notification.prize ? '20%' : '50%', \n                left: notification.prize ? '50%' : '50%',\n                transform: `translate(${notification.x}px, ${notification.y}px)`,\n                color: notification.prize ? 'gold' : 'white',\n                opacity: 0,\n                animation: 'fadeOut 3s forwards',\n                fontSize: '24px',\n                textAlign: 'center',\n                fontWeight: notification.prize ? 'bold' : 'normal'\n              }}>\n                {notification.prize ? `ðŸŽ‰+${notification.value}` : `+${notification.value}`}\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n      {/* Prize List */}\n      <div style={{ \n        width: '50%', \n        backgroundColor: '#e0e0e0', \n        padding: '20px', \n        overflowY: 'auto' \n      }}>\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center' \n        }}>\n          <h2>Prizes Won</h2>\n          <button \n            onClick={clearAllPrizes}\n            style={{\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              padding: '5px 10px',\n              borderRadius: '5px'\n            }}\n          >\n            Clear All\n          </button>\n        </div>\n        {prizes.map((prize, index) => (\n          <div \n            key={index} \n            style={{\n              backgroundColor: 'white',\n              margin: '10px 0',\n              padding: '10px',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              borderRadius: '5px'\n            }}\n          >\n            {prize.name}\n            <button \n              onClick={() => removePrize(index)}\n              style={{\n                backgroundColor: 'red',\n                color: 'white',\n                border: 'none',\n                borderRadius: '50%',\n                width: '25px',\n                height: '25px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              âœ•\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <style>{`\n        @keyframes fadeOut {\n          0% { opacity: 1; transform: translate(0, 0); }\n          100% { opacity: 0; transform: translate(var(--x), var(--y)); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ClickerGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}