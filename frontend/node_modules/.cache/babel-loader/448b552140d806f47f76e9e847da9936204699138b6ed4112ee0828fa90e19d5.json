{"ast":null,"code":"import _objectSpread from\"/home/manasa/Projects/Assessment/cookie-clicker/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import cookieImage from'../assests/images/cookie.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||'/api';const CookieIcon=_ref=>{let{isPressed,onClick}=_ref;return/*#__PURE__*/_jsx(\"img\",{src:cookieImage// Adjust this path to where your image is stored\n,alt:\"Cookie\",onClick:onClick,style:{// background: url(cookie.png),\nwidth:'200px',height:'200px',cursor:'pointer',transform:isPressed?'scale(0.9)':'scale(1)',transition:'transform 0.1s',filter:isPressed?'brightness(0.8)':'none'}});};const ClickerGame=()=>{const[totalScore,setTotalScore]=useState(0);const[clickNotification,setClickNotification]=useState(null);const[prizes,setPrizes]=useState([]);const[userId,setUserId]=useState(null);const[isPressed,setIsPressed]=useState(false);const[activeEffects,setActiveEffects]=useState([]);const effectTimerRef=useRef(null);useEffect(()=>{const storedUserId=localStorage.getItem('userId');setUserId(storedUserId||\"user_\".concat(Date.now()));localStorage.setItem('userId',storedUserId||\"user_\".concat(Date.now()));},[]);// Effect tracking and cleanup\nuseEffect(()=>{if(activeEffects.length>0){if(effectTimerRef.current){clearInterval(effectTimerRef.current);}effectTimerRef.current=setInterval(()=>{setActiveEffects(currentEffects=>currentEffects.filter(effect=>{// Time-based effects\nif(effect.remainingTime!==undefined){const newRemainingTime=Math.max(0,effect.remainingTime-1);return newRemainingTime>0;}// Click-based effects\nreturn effect.remainingClicks>0;}).map(effect=>{if(effect.remainingTime!==undefined){return _objectSpread(_objectSpread({},effect),{},{remainingTime:effect.remainingTime-1});}return effect;}));},1000);return()=>{if(effectTimerRef.current){clearInterval(effectTimerRef.current);}};}},[activeEffects]);// Calculate current click value based on active effects\nconst calculateClickValue=baseValue=>{return activeEffects.reduce((finalValue,effect)=>{switch(effect.type){case'Double Points':if(Date.now()-effect.startTime<effect.duration){return finalValue*2;}return finalValue;case'Prize Multiplier':if(effect.remainingClicks>0){return finalValue*1.5;}return finalValue;case'Lucky Charm':if(effect.remainingClicks>0){return finalValue+10;}return finalValue;default:return finalValue;}},baseValue);};const handleClick=async()=>{setIsPressed(true);setTimeout(()=>setIsPressed(false),100);try{const response=await fetch(\"\".concat(API_URL,\"/api/click\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId,activeEffects:activeEffects})});const{totalScore,scoreIncrease,prize,prizeEffect,updatedActiveEffects}=await response.json();setTotalScore(totalScore);const notifications=[];// Calculate modified click value\nconst modifiedScoreIncrease=calculateClickValue(scoreIncrease);// Base click notification\nnotifications.push({value:modifiedScoreIncrease,id:Date.now(),x:-20,y:Math.random()*20-10});// Prize notification if exists\nif(prize&&prizeEffect){notifications.push({value:prizeEffect.pointIncrease,prize:prize,id:Date.now()+1,x:20,y:Math.random()*20-10});// Add new prize to list\nsetPrizes(prev=>[{name:prize,timestamp:new Date().toLocaleString()},...prev]);}// Update active effects\nsetActiveEffects(updatedActiveEffects||[]);setClickNotification(notifications);setTimeout(()=>setClickNotification(null),1000);}catch(error){console.error('Click failed',error);}};const removePrize=indexToRemove=>{setPrizes(prev=>prev.filter((_,index)=>index!==indexToRemove));};const clearAllPrizes=()=>{setPrizes([]);};return/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',width:'100%',height:'100vh',backgroundColor:'#f0f0f0'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:'50%',display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center'},children:[/*#__PURE__*/_jsxs(\"h2\",{children:[totalScore,\" cookies\"]}),activeEffects.map((effect,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{color:'green',marginBottom:'10px',fontWeight:'bold'},children:[effect.type,effect.remainingTime!==undefined?\" ends in: \".concat(effect.remainingTime,\" seconds\"):\" remaining: \".concat(effect.remainingClicks,\" clicks\")]},index)),/*#__PURE__*/_jsxs(\"div\",{style:{position:'relative'},children:[/*#__PURE__*/_jsx(CookieIcon,{isPressed:isPressed,onClick:handleClick}),clickNotification&&clickNotification.filter(notification=>notification.value>0).map(notification=>/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:notification.prize?'20%':'60%',left:notification.prize?'50%':'50%',transform:\"translate(\".concat(notification.x,\"px, \").concat(notification.y,\"px)\"),color:notification.prize?'brown':'white',opacity:0,animation:'fadeOut 3s forwards',fontSize:'24px',textAlign:'center',fontWeight:notification.prize?'bold':'normal'},children:notification.prize?\"\\uD83C\\uDF89+\".concat(notification.value):\"+\".concat(notification.value)},notification.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{width:'50%',backgroundColor:'#e0e0e0',padding:'20px',overflowY:'auto'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Prizes Won\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearAllPrizes,style:{backgroundColor:'red',color:'white',border:'none',padding:'5px 10px',borderRadius:'5px'},children:\"Clear All\"})]}),prizes.map((prize,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',margin:'10px 0',padding:'10px',display:'flex',justifyContent:'space-between',alignItems:'center',borderRadius:'5px'},children:[prize.name,/*#__PURE__*/_jsx(\"button\",{onClick:()=>removePrize(index),style:{backgroundColor:'red',color:'white',border:'none',borderRadius:'50%',width:'25px',height:'25px',display:'flex',justifyContent:'center',alignItems:'center'},children:\"\\u2715\"})]},index))]}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n        @keyframes fadeOut {\\n          0% { opacity: 1; transform: translate(0, 0); }\\n          100% { opacity: 0; transform: translate(var(--x), var(--y)); }\\n        }\\n      \"})]});};export default ClickerGame;","map":{"version":3,"names":["React","useState","useEffect","useRef","cookieImage","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","CookieIcon","_ref","isPressed","onClick","src","alt","style","width","height","cursor","transform","transition","filter","ClickerGame","totalScore","setTotalScore","clickNotification","setClickNotification","prizes","setPrizes","userId","setUserId","setIsPressed","activeEffects","setActiveEffects","effectTimerRef","storedUserId","localStorage","getItem","concat","Date","now","setItem","length","current","clearInterval","setInterval","currentEffects","effect","remainingTime","undefined","newRemainingTime","Math","max","remainingClicks","map","_objectSpread","calculateClickValue","baseValue","reduce","finalValue","type","startTime","duration","handleClick","setTimeout","response","fetch","method","headers","body","JSON","stringify","scoreIncrease","prize","prizeEffect","updatedActiveEffects","json","notifications","modifiedScoreIncrease","push","value","id","x","y","random","pointIncrease","prev","name","timestamp","toLocaleString","error","console","removePrize","indexToRemove","_","index","clearAllPrizes","display","backgroundColor","children","flexDirection","alignItems","justifyContent","color","marginBottom","fontWeight","position","notification","top","left","opacity","animation","fontSize","textAlign","padding","overflowY","border","borderRadius","margin"],"sources":["/home/manasa/Projects/Assessment/cookie-clicker/frontend/src/components/ClickerGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport cookieImage from  '../assests/images/cookie.png';\n\nconst API_URL = process.env.REACT_APP_API_URL || '/api';\n\nconst CookieIcon = ({ isPressed, onClick }) => (\n  <img\n    src={cookieImage}// Adjust this path to where your image is stored\n    alt=\"Cookie\"\n    onClick={onClick}\n    style={{\n      // background: url(cookie.png),\n      width: '200px',\n      height: '200px',\n      cursor: 'pointer',\n      transform: isPressed ? 'scale(0.9)' : 'scale(1)',\n      transition: 'transform 0.1s',\n      filter: isPressed ? 'brightness(0.8)' : 'none',\n    }}\n  />\n);\n\nconst ClickerGame = () => {\n  const [totalScore, setTotalScore] = useState(0);\n  const [clickNotification, setClickNotification] = useState(null);\n  const [prizes, setPrizes] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [isPressed, setIsPressed] = useState(false);\n  const [activeEffects, setActiveEffects] = useState([]);\n  const effectTimerRef = useRef(null);\n\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    setUserId(storedUserId || `user_${Date.now()}`);\n    localStorage.setItem('userId', storedUserId || `user_${Date.now()}`);\n  }, []);\n\n  // Effect tracking and cleanup\n  useEffect(() => {\n    if (activeEffects.length > 0) {\n      if (effectTimerRef.current) {\n        clearInterval(effectTimerRef.current);\n      }\n\n      effectTimerRef.current = setInterval(() => {\n        setActiveEffects(currentEffects => \n          currentEffects.filter(effect => {\n            // Time-based effects\n            if (effect.remainingTime !== undefined) {\n              const newRemainingTime = Math.max(0, effect.remainingTime - 1);\n              return newRemainingTime > 0;\n            }\n            // Click-based effects\n            return effect.remainingClicks > 0;\n          }).map(effect => {\n            if (effect.remainingTime !== undefined) {\n              return { ...effect, remainingTime: effect.remainingTime - 1 };\n            }\n            return effect;\n          })\n        );\n      }, 1000);\n\n      return () => {\n        if (effectTimerRef.current) {\n          clearInterval(effectTimerRef.current);\n        }\n      };\n    }\n  }, [activeEffects]);\n\n  // Calculate current click value based on active effects\n  const calculateClickValue = (baseValue) => {\n    return activeEffects.reduce((finalValue, effect) => {\n      switch(effect.type) {\n        case 'Double Points':\n          if (Date.now() - effect.startTime < effect.duration) {\n            return finalValue * 2;\n          }\n          return finalValue;\n        \n        case 'Prize Multiplier':\n          if (effect.remainingClicks > 0) {\n            return finalValue * 1.5;\n          }\n          return finalValue;\n        \n        case 'Lucky Charm':\n          if (effect.remainingClicks > 0) {\n            return finalValue + 10;\n          }\n          return finalValue;\n        \n        default:\n          return finalValue;\n      }\n    }, baseValue);\n  };\n\n  const handleClick = async () => {\n    setIsPressed(true);\n    setTimeout(() => setIsPressed(false), 100);\n\n    try {\n      const response = await fetch(`${API_URL}/api/click`, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ \n          userId,\n          activeEffects: activeEffects\n        })\n      });\n      \n      const { \n        totalScore, \n        scoreIncrease, \n        prize, \n        prizeEffect,\n        updatedActiveEffects \n      } = await response.json();\n      \n      setTotalScore(totalScore);\n      \n      const notifications = [];\n      \n      // Calculate modified click value\n      const modifiedScoreIncrease = calculateClickValue(scoreIncrease);\n      \n      // Base click notification\n      notifications.push({\n        value: modifiedScoreIncrease,\n        id: Date.now(),\n        x: -20,\n        y: Math.random() * 20 - 10\n      });\n      \n      // Prize notification if exists\n      if (prize && prizeEffect) {\n        notifications.push({\n          value: prizeEffect.pointIncrease,\n          prize: prize,\n          id: Date.now() + 1,\n          x: 20,\n          y: Math.random() * 20 - 10\n        });\n        \n        // Add new prize to list\n        setPrizes(prev => [{\n          name: prize,\n          timestamp: new Date().toLocaleString()\n        }, ...prev]);\n      }\n      \n      // Update active effects\n      setActiveEffects(updatedActiveEffects || []);\n      \n      setClickNotification(notifications);\n      \n      setTimeout(() => setClickNotification(null), 1000);\n    } catch (error) {\n      console.error('Click failed', error);\n    }\n  };\n\n  const removePrize = (indexToRemove) => {\n    setPrizes(prev => prev.filter((_, index) => index !== indexToRemove));\n  };\n\n  const clearAllPrizes = () => {\n    setPrizes([]);\n  };\n\n  return (\n    <div style={{ \n      display: 'flex', \n      width: '100%', \n      height: '100vh',\n      backgroundColor: '#f0f0f0'\n    }}>\n      <div style={{ \n        width: '50%', \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        justifyContent: 'center' \n      }}>\n        <h2>{totalScore} cookies</h2>\n        \n        {/* Active Effects Display */}\n        {activeEffects.map((effect, index) => (\n          <div \n            key={index} \n            style={{ \n              color: 'green', \n              marginBottom: '10px', \n              fontWeight: 'bold' \n            }}\n          >\n            {effect.type} \n            {effect.remainingTime !== undefined \n              ? ` ends in: ${effect.remainingTime} seconds`\n              : ` remaining: ${effect.remainingClicks} clicks`\n            }\n          </div>\n        ))}\n        \n        <div style={{ position: 'relative' }}>\n          <CookieIcon \n            isPressed={isPressed}\n            onClick={handleClick} \n          />\n\n          {clickNotification && clickNotification\n            .filter(notification => notification.value > 0)\n            .map(notification => (\n              <div key={notification.id} style={{\n                position: 'absolute',\n                top: notification.prize ? '20%' : '60%', \n                left: notification.prize ? '50%' : '50%',\n                transform: `translate(${notification.x}px, ${notification.y}px)`,\n                color: notification.prize ? 'brown' : 'white',\n                opacity: 0,\n                animation: 'fadeOut 3s forwards',\n                fontSize: '24px',\n                textAlign: 'center',\n                fontWeight: notification.prize ? 'bold' : 'normal'\n              }}>\n                {notification.prize ? `🎉+${notification.value}` : `+${notification.value}`}\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n      {/* Prize List */}\n      <div style={{ \n        width: '50%', \n        backgroundColor: '#e0e0e0', \n        padding: '20px', \n        overflowY: 'auto' \n      }}>\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between', \n          alignItems: 'center' \n        }}>\n          <h2>Prizes Won</h2>\n          <button \n            onClick={clearAllPrizes}\n            style={{\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              padding: '5px 10px',\n              borderRadius: '5px'\n            }}\n          >\n            Clear All\n          </button>\n        </div>\n        {prizes.map((prize, index) => (\n          <div \n            key={index} \n            style={{\n              backgroundColor: 'white',\n              margin: '10px 0',\n              padding: '10px',\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              borderRadius: '5px'\n            }}\n          >\n            {prize.name}\n            <button \n              onClick={() => removePrize(index)}\n              style={{\n                backgroundColor: 'red',\n                color: 'white',\n                border: 'none',\n                borderRadius: '50%',\n                width: '25px',\n                height: '25px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              ✕\n            </button>\n          </div>\n        ))}\n      </div>\n\n      <style>{`\n        @keyframes fadeOut {\n          0% { opacity: 1; transform: translate(0, 0); }\n          100% { opacity: 0; transform: translate(var(--x), var(--y)); }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ClickerGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}