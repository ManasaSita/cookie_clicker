{"ast":null,"code":"var _jsxFileName = \"/home/manasa/Projects/Assessment/cookie-clicker/frontend/src/components/ClickerGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Typography, notification } from 'antd';\nimport axios from 'axios';\nimport { CookieOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClickerGame = () => {\n  _s();\n  const [totalScore, setTotalScore] = useState(0);\n  const [lastScoreIncrease, setLastScoreIncrease] = useState(0);\n  const [userId, setUserId] = useState(null);\n\n  // Generate or retrieve unique user ID\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    } else {\n      const newUserId = `user_${Date.now()}`;\n      setUserId(newUserId);\n      localStorage.setItem('userId', newUserId);\n    }\n  }, []);\n\n  // Fetch initial stats when user ID is set\n  useEffect(() => {\n    if (userId) {\n      fetchUserStats();\n    }\n  }, [userId]);\n  const fetchUserStats = async () => {\n    try {\n      const response = await axios.get(`/api/stats/${userId}`);\n      setTotalScore(response.data.totalScore);\n    } catch (error) {\n      console.error('Failed to fetch stats', error);\n    }\n  };\n  const handleClick = async () => {\n    try {\n      const response = await axios.post('/api/click', {\n        userId\n      });\n      const {\n        totalScore,\n        scoreIncrease,\n        prize\n      } = response.data;\n      setTotalScore(totalScore);\n      setLastScoreIncrease(scoreIncrease);\n      if (prize) {\n        notification.success({\n          message: 'Prize Earned!',\n          description: `You won a ${prize}!`,\n          icon: /*#__PURE__*/_jsxDEV(CookieOutlined, {\n            style: {\n              color: '#gold'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)\n        });\n      }\n    } catch (error) {\n      console.error('Click failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Cookie Clicker Clone\",\n    style: {\n      width: 300,\n      margin: '20px auto',\n      textAlign: 'center',\n      boxShadow: '0 4px 6px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n      level: 2,\n      children: [\"Total Score: \", totalScore]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      size: \"large\",\n      onClick: handleClick,\n      style: {\n        backgroundColor: '#ff6b6b',\n        borderColor: '#ff6b6b',\n        transform: 'scale(1.05)',\n        transition: 'transform 0.1s'\n      },\n      children: [\"Click Me! (+\", lastScoreIncrease, \" Points)\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ClickerGame, \"6y5XT8BCVeJy7uMKpnsLlTGuFeA=\");\n_c = ClickerGame;\nexport default ClickerGame;\nvar _c;\n$RefreshReg$(_c, \"ClickerGame\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Typography","notification","axios","CookieOutlined","jsxDEV","_jsxDEV","ClickerGame","_s","totalScore","setTotalScore","lastScoreIncrease","setLastScoreIncrease","userId","setUserId","storedUserId","localStorage","getItem","newUserId","Date","now","setItem","fetchUserStats","response","get","data","error","console","handleClick","post","scoreIncrease","prize","success","message","description","icon","style","color","fileName","_jsxFileName","lineNumber","columnNumber","title","width","margin","textAlign","boxShadow","children","Title","level","type","size","onClick","backgroundColor","borderColor","transform","transition","_c","$RefreshReg$"],"sources":["/home/manasa/Projects/Assessment/cookie-clicker/frontend/src/components/ClickerGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Card, Typography, notification } from 'antd';\nimport axios from 'axios';\nimport { CookieOutlined } from '@ant-design/icons';\n\nconst ClickerGame = () => {\n  const [totalScore, setTotalScore] = useState(0);\n  const [lastScoreIncrease, setLastScoreIncrease] = useState(0);\n  const [userId, setUserId] = useState(null);\n\n  // Generate or retrieve unique user ID\n  useEffect(() => {\n    const storedUserId = localStorage.getItem('userId');\n    if (storedUserId) {\n      setUserId(storedUserId);\n    } else {\n      const newUserId = `user_${Date.now()}`;\n      setUserId(newUserId);\n      localStorage.setItem('userId', newUserId);\n    }\n  }, []);\n\n  // Fetch initial stats when user ID is set\n  useEffect(() => {\n    if (userId) {\n      fetchUserStats();\n    }\n  }, [userId]);\n\n  const fetchUserStats = async () => {\n    try {\n      const response = await axios.get(`/api/stats/${userId}`);\n      setTotalScore(response.data.totalScore);\n    } catch (error) {\n      console.error('Failed to fetch stats', error);\n    }\n  };\n\n  const handleClick = async () => {\n    try {\n      const response = await axios.post('/api/click', { userId });\n      const { totalScore, scoreIncrease, prize } = response.data;\n\n      setTotalScore(totalScore);\n      setLastScoreIncrease(scoreIncrease);\n\n      if (prize) {\n        notification.success({\n          message: 'Prize Earned!',\n          description: `You won a ${prize}!`,\n          icon: <CookieOutlined style={{ color: '#gold' }} />\n        });\n      }\n    } catch (error) {\n      console.error('Click failed', error);\n    }\n  };\n\n  return (\n    <Card \n      title=\"Cookie Clicker Clone\" \n      style={{ \n        width: 300, \n        margin: '20px auto', \n        textAlign: 'center',\n        boxShadow: '0 4px 6px rgba(0,0,0,0.1)'\n      }}\n    >\n      <Typography.Title level={2}>\n        Total Score: {totalScore}\n      </Typography.Title>\n      \n      <Button \n        type=\"primary\" \n        size=\"large\" \n        onClick={handleClick}\n        style={{\n          backgroundColor: '#ff6b6b',\n          borderColor: '#ff6b6b',\n          transform: 'scale(1.05)',\n          transition: 'transform 0.1s'\n        }}\n      >\n        Click Me! (+{lastScoreIncrease} Points)\n      </Button>\n    </Card>\n  );\n};\n\nexport default ClickerGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}